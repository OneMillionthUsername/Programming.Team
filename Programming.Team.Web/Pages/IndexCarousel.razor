@inherits ReactiveComponentBase<IndexViewModel>
@attribute [AllowAnonymous]

@inject NavigationManager Navigator

@* TODO: mobile  *@
@* TODO: loading *@
@* TODO: US-letter ratio *@
@if (ViewModel != null)
{
    <MudCarousel @ref="carPostings"
                 Class="custom-carousel"
                 ShowArrows="@arrows"
                 ShowBullets="@bullets"
                 BulletsClass="custom-bullets"
                 EnableSwipeGesture="@enableSwipeGesture"
                 AutoCycle="@autocycle"
                 TData="object">

        @foreach (var posting in ViewModel.Postings)
        {
            var url = $"https://programming.team/api/resumes/{posting.Id}";
            var internal_url = $"{Navigator.BaseUri}api/resumes/{posting.Id}";

            <MudCarouselItem Transition="transition" Class="carousel-item-container">
                <!-- Left Panel - Job Description -->
                <div class="panel-container">
                    <div class="panel-header job-header">
                        <MudText Typo="Typo.h6" Class="header-text">JOB DESCRIPTION</MudText>
                    </div>
                    <MudPaper Class="content-panel job-content">
                        <div class="markdown-content">
                            @((MarkupString)posting.Details)
                        </div>
                    </MudPaper>
                </div>

                <!-- Center Arrow -->
                <div class="center-arrow">
                    <MudIcon Icon="@Icons.Material.Filled.DoubleArrow"
                             Size="Size.Large"
                             Color="Color.Primary" />
                </div>

                <!-- Right Panel - Resume Result -->
                <div class="panel-container">
                    <div class="panel-header resume-header">
                        <MudText Typo="Typo.h6" Class="header-text">RESUME RESULT</MudText>
                    </div>
                    <MudPaper Class="content-panel resume-content">
                        <ProgTeamPdfViewer Url="@internal_url" />
                    </MudPaper>
                    <div class="button-container">
                        <MudButton Variant="Variant.Outlined"
                                   Color="Color.Primary"
                                   Href="@url"
                                   Target="_blank"
                                   EndIcon="@Icons.Material.Filled.OpenInNew"
                                   Class="view-button">
                            View Full Resume
                        </MudButton>
                    </div>
                </div>
            </MudCarouselItem>
        }
    </MudCarousel>
}

@code {
    @* Carousel parmeters *@
    private bool arrows = true;
    private bool bullets = true;
    private bool enableSwipeGesture = true;
    private bool autocycle = false;
    private Transition transition = Transition.Slide;
    private MudCarousel<object> carPostings = null!;



    protected override void OnInitialized()
    {
        if (ViewModel != null)
            ViewModel.Postings.CollectionChanged += (s, e) =>
            {
                carPostings.SelectedIndex = 0;
                InvokeAsync(StateHasChanged);
            };
        base.OnInitialized();
    }
    private bool ValidateEmail(string email)
    {
        return !string.IsNullOrWhiteSpace(email) && email.Contains("@");
    }


}