@inherits ReactiveComponentBase<AddDocumentTemplateViewModel>

@if (ViewModel != null)
{
    <AlertView Alert="ViewModel.Alert" />

    <MudPopover Open="ViewModel.IsOpen" Fixed="true" Class="px-4 pt-4">
        <div class="d-flex flex-column">
            <MudStack>
                <MudTextField @bind-Value="ViewModel.Name" Label="Name" Variant="Variant.Outlined" />
                <MudSelect Label="Document Type" T="DocumentType" @bind-Value="ViewModel.DocumentType">
                    @foreach(var doctype in ViewModel.DocumentTypes)
                    {
                        <MudSelectItem T="DocumentType" Value="doctype">@doctype.Name</MudSelectItem>
                    }
                </MudSelect>
                <MudTextField Lines="10" @bind-Value="ViewModel.Template" Label="Template" Variant="Variant.Outlined" />
                <MudStack Row="true">
                    <MudButton OnClick="ViewModel.Add.BindCommand<MouseEventArgs>()">Add Document Template</MudButton>
                    <MudButton OnClick="ViewModel.Cancel.BindCommand<MouseEventArgs>()">Cancel</MudButton>
                </MudStack>
            </MudStack>

        </div>
    </MudPopover>

}

@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && ViewModel != null)
        {
            await ViewModel.Init.Execute().GetAwaiter();
        }
        await base.OnAfterRenderAsync(firstRender);
    }
}
