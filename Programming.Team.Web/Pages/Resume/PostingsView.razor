@page "/resume/postings"
@attribute [Authorize]
@inherits ReactiveInjectableComponentBase<PostingsViewModel>
@if (ViewModel != null)
{
    <AlertView Alert="ViewModel.Alert" />
    <MudDataGrid @ref="grid" T="Posting" ServerData="ViewModel.Fetch.BindServerDataCommand()" RowsPerPage="10"
        Filterable="true" FilterMode="DataGridFilterMode.ColumnFilterMenu" SortMode="SortMode.Multiple">
        <Columns>
            <PropertyColumn Property="x => x.Name" Title="Name" />
            <PropertyColumn Property="x => x.DocumentTemplate.Name" Title="Document Template" Sortable="false"
                Filterable="false" />
            <TemplateColumn Title="Edit Posting">
                <CellTemplate>
                    @{
                        var strHref = $"/resume/postings/{context.Item.Id}";
                        <MudIconButton Href="@strHref" Icon="@Icons.Material.Filled.Edit" Color="Color.Primary"
                            aria-label="edit" />
                    }
                </CellTemplate>
            </TemplateColumn>
            <TemplateColumn Title="Download Resume">
                <CellTemplate>
                    @{
                        var strHref = $"api/resumes/{context.Item.Id}";
                        <MudIconButton Href="@strHref" Icon="@Icons.Material.Filled.Download" Color="Color.Primary"
                            aria-label="download" />
                    }
                </CellTemplate>
            </TemplateColumn>
        </Columns>
        <NoRecordsContent>
            <MudPaper Class="pa-4 text-center">
                <MudText Typo="Typo.h6">No postings found</MudText>
                <MudText Typo="Typo.body2">Try adjusting your filters or come back later.</MudText>
            </MudPaper>
        </NoRecordsContent>
        <PagerContent>
            <MudDataGridPager T="Posting" />
        </PagerContent>
    </MudDataGrid>
}
@code {
    private MudDataGrid<Posting> grid = null!;
}
